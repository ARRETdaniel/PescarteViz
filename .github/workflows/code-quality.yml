name: Code Quality

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js for backend
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          # Desabilitar cache temporariamente
          # até que package-lock.json seja gerado corretamente
          cache: "npm"
          cache-dependency-path: backend/package.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm install
          # Gerar package-lock.json se não existir
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
          fi

      - name: Check backend code format
        run: |
          cd backend
          # Instalar ESLint se não estiver nas dependências
          npm install eslint --no-save
          npx eslint . --ext .js || echo "Linting issues detected in backend"

      - name: Set up Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          # Desabilitar cache temporariamente
          cache: "npm"
          cache-dependency-path: frontend/package.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
          # Gerar package-lock.json se não existir
          if [ ! -f "package-lock.json" ]; then
            npm install --package-lock-only
          fi

      - name: Check frontend code format
        run: |
          cd frontend
          # Instalar ESLint e plugin React se não estiverem nas dependências
          npm install eslint eslint-plugin-react --no-save
          npx eslint src/ --ext .js,.jsx || echo "Linting issues detected in frontend"
