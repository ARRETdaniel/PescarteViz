name: PESCARTE Docker CI

on:
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened]
  push:
    branches: ["main"]
    paths:
      - 'docker-compose.yml'
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/docker-image.yml'
      - '!**.md'
  workflow_dispatch:  # Allow manual triggering

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build frontend and backend
        run: |
          docker-compose build frontend backend

      - name: Adjust PostgreSQL port for CI environment
        run: |
          sed -i 's/5432:5432/5435:5432/' docker-compose.yml
          cat docker-compose.yml

      - name: Start services
        run: |
          docker-compose up -d
          sleep 60  # Increase wait time for services to initialize

      - name: Check container status
        run: docker-compose ps

      - name: Check backend logs
        run: docker-compose logs backend

      - name: Test backend API
        run: |
          curl -v http://localhost:3001/api/comunidades/stats || true
          curl -s http://localhost:3001/api/comunidades/stats | grep -q "total_municipios" || exit 1
          echo "Backend API respondeu corretamente"

      - name: Test frontend
        run: |
          curl -s -I http://localhost:3000 | grep -q "200 OK" || exit 1
          echo "Frontend está servindo conteúdo corretamente"

      - name: Show logs on failure
        if: ${{ failure() }}
        run: docker-compose logs
